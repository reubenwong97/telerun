var searchIndex = JSON.parse('{\
"telerunbot":{"doc":"Telegram bot for a running contest between friends.","t":"FAAFFAANDENNNNNNFLLLLLMLLLLLLLLLLLLMLLLLLLLLLLLLLLMMMMMMGFFFFFFFFFDDDDLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLMLLLLDDDLLLLLLMMMLLLLLLLMMLLLLLLMMLLLLLLLLLLLLLLMMMLLL","n":["__shuttle_shuttle_main","bot","database","loader","main","message","models","Add","BotService","Command","Delete","Edit","Help","List","Show","Tally","answer","bind","borrow","borrow","borrow_mut","borrow_mut","bot","bot_commands","clone","clone_into","descriptions","from","from","from_ref","into","into","into_request","into_request","parse","postgres","repl","repl_with_listener","start","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unerase","unerase","vzip","vzip","distance","distance","limit","run_id","run_id","user_name","DBResult","add_run","add_run_wrapper","create_user","delete_run","get_runs","get_tally","get_user","get_users_in_chat","update_run","ListRunTemplate","ListTallyTemplate","ListUserTemplate","RunDisplay","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","display_tally","dyn_render","dyn_render","dyn_render","dyn_render_into","dyn_render_into","dyn_render_into","dyn_write_into","dyn_write_into","dyn_write_into","extension","extension","extension","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","into_request","into_request","into_request","into_request","list_runs","list_users","mime_type","mime_type","mime_type","render_into","render_into","render_into","runs","scores","size_hint","size_hint","size_hint","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unerase","unerase","unerase","unerase","users","vzip","vzip","vzip","vzip","Run","Score","User","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","chat_id","distance","distance","fmt","fmt","from","from","from","from_row","from_row","id","id","into","into","into","into_request","into_request","into_request","medals","run_datetime","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unerase","unerase","unerase","user_id","user_name","user_name","vzip","vzip","vzip"],"q":[[0,"telerunbot"],[7,"telerunbot::bot"],[50,"telerunbot::bot::Command"],[56,"telerunbot::database"],[66,"telerunbot::message"],[146,"telerunbot::models"]],"d":["Entry point to the telegram bot service.","Bot services.","Database operations.","","","Templating and message preparation.","","Matched to <code>/add &lt;distance&gt; &lt;user_name&gt;</code> -&gt; creates users in …","Encapsulate the BotService.","Enumeration of commands accepted by the bot.","Matched to <code>/delete &lt;run_id&gt;</code> -&gt; removes a certain run from …","Matched to <code>/edit &lt;run_id&gt; &lt;distance&gt;</code> -&gt; edits stored run …","Matched to <code>/help</code> -&gt; displays commands and their …","Matched to <code>/list &lt;limit&gt;</code> -&gt; displays runs registered by …","Matched to <code>/show</code> -&gt; displays users within chat.","Matched to <code>/tally</code> -&gt; sends score board as message through …","Function used for handling various commands matched.","","","","","","Teloxide Bot.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Database connection.","","","Clones <code>bot</code> and <code>db_connection</code> before passing these over to …","","","","","","","","","","","","Distance run in km","Corrected distance run in km.","Limit to query from db.","Id of run as stored in runs table.","Id of run to remove from table.","Name of user to tie the run to. Must be unique.","Convenience type to wrap a generic <code>Ok</code> and <code>sqlx::Error</code>.","Adds run data.","Wrapper for adding run data.","Creates a user in users table.","Deletes a run by id.","Fetches runs fromt the chat.","Aggregates runs into a tally (<code>Vec&lt;Score&gt;</code>)","Retrieves a user.","Fetchers users in a chat.","Updates a certain run by id.","Struct Run display.","Struct Tally display.","Struct User display.","NewType implementation so that Display can be implemented …","","","","","","","","","","Displays score aggregates fetched from database.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Displays runs fetched from database.","Displays users fetched from database.","","","","","","","Reference to <code>runs</code> for askama to access.","Reference to <code>scores</code> for askama to access.","","","","","","","","","","","","","","","","","","","","","","","","Reference to <code>users</code> for askama to access.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,11,0,0,11,11,11,11,11,11,0,3,3,11,3,11,3,11,11,11,11,3,11,11,3,11,3,11,11,3,11,11,3,11,3,11,3,11,3,11,3,11,3,11,61,62,63,62,64,61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,45,53,54,55,45,53,54,55,45,0,53,54,55,53,54,55,53,54,55,53,54,55,45,53,54,55,45,53,54,55,45,53,54,55,45,53,54,55,0,0,53,54,55,53,54,55,53,55,53,54,55,45,53,54,55,45,53,54,55,45,53,54,55,45,53,54,55,45,53,54,55,54,45,53,54,55,0,0,0,43,44,41,43,44,41,44,43,41,43,44,43,44,41,44,41,44,41,43,44,41,43,44,41,43,41,43,44,43,44,41,43,44,41,43,44,41,43,44,41,41,43,44,43,44,41],"f":[[[1,2],[[5,[3,4]]]],0,0,[[6,7,8],[[5,[3,4]]]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[9,10,11,2],12],[[3,13],[[16,[[15,[14]]]]]],[[]],[[]],[[]],[[]],0,[[],[[18,[17]]]],[11,11],[[]],[[],19],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[21,21],[[5,[11,22]]]],0,[[[0,[23,24,25,26]],[0,[[29,[27,[5,[28]]]],25,26]]],[[16,[[15,[14,30]]]]]],[[[0,[23,24,25,26]],[0,[[29,[27,[5,[28]]]],25,26]],[0,[31,25]]],[[16,[[15,[14,30]]]]]],[3,[[5,[32]]]],[[]],[[],5],[[],5],[[],5],[[],5],[[],33],[[],33],[[[35,[34]]],35],[[[35,[34]]],35],[[]],[[]],0,0,0,0,0,0,0,[[36,37,2],[[5,[38]]]],[[36,21,39,2],[[5,[38]]]],[[21,39,2],[[5,[38]]]],[[37,2],[[5,[38]]]],[[39,40,2],[[5,[[42,[[18,[41]]]],38]]]],[[39,2],[[5,[[42,[[18,[43]]]],38]]]],[[21,39,2],[[5,[[42,[44]],38]]]],[[39,2],[[5,[[42,[[18,[44]]]],38]]]],[[37,36,2],[[5,[38]]]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[45],[[[42,[[18,[43]]]]],46],[[],[[5,[46,47]]]],[[],[[5,[46,47]]]],[[],[[5,[46,47]]]],[48,[[5,[47]]]],[48,[[5,[47]]]],[48,[[5,[47]]]],[49,[[5,[50]]]],[49,[[5,[50]]]],[49,[[5,[50]]]],[[],[[42,[21]]]],[[],[[42,[21]]]],[[],[[42,[21]]]],[[45,51],52],[[53,51],52],[[54,51],52],[[55,51],52],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[[42,[[18,[41]]]]],46],[[[42,[[18,[44]]]]],46],[[],21],[[],21],[[],21],[[53,[0,[48,56]]],57],[[54,[0,[48,56]]],57],[[55,[0,[48,56]]],57],0,0,[[],58],[[],58],[[],58],[[],46],[[],46],[[],46],[[],46],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],33],[[],33],[[],33],[[],33],[[[35,[34]]],35],[[[35,[34]]],35],[[[35,[34]]],35],[[[35,[34]]],35],0,[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[43,51],52],[[44,51],52],[[]],[[]],[[]],[59,[[60,[44]]]],[59,[[60,[41]]]],0,0,[[]],[[]],[[]],[[],20],[[],20],[[],20],0,0,[[],46],[[],46],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],33],[[],33],[[],33],[[[35,[34]]],35],[[[35,[34]]],35],[[[35,[34]]],35],0,0,0,[[]],[[]],[[]]],"c":[],"p":[[3,"SecretStore"],[6,"PgPool"],[3,"BotService"],[4,"Error"],[4,"Result"],[3,"ProvisionerFactory"],[3,"ResourceTracker"],[3,"Logger"],[3,"Bot"],[3,"Message"],[4,"Command"],[6,"ResponseResult"],[4,"SocketAddr"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"BotCommand"],[3,"Vec"],[3,"CommandDescriptions"],[3,"Request"],[15,"str"],[4,"ParseError"],[8,"Requester"],[8,"Clone"],[8,"Send"],[8,"Sync"],[3,"DependencyMap"],[4,"RequestError"],[8,"Injectable"],[3,"Global"],[8,"UpdateListener"],[6,"CustomError"],[3,"TypeId"],[3,"Erased"],[3,"NonNull"],[15,"f32"],[15,"i32"],[4,"Error"],[3,"ChatId"],[15,"i64"],[3,"Run"],[4,"Option"],[3,"Score"],[3,"User"],[3,"RunDisplay"],[3,"String"],[4,"Error"],[8,"Write"],[8,"Write"],[3,"Error"],[3,"Formatter"],[6,"Result"],[3,"ListRunTemplate"],[3,"ListUserTemplate"],[3,"ListTallyTemplate"],[8,"Sized"],[6,"Result"],[15,"usize"],[8,"Row"],[6,"Result"],[13,"Add"],[13,"Edit"],[13,"List"],[13,"Delete"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
